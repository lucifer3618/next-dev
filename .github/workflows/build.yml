name: Build Process

on:
  workflow_call:
    outputs:
      build_success:
        description: "Whether the build was successful"
        value: ${{ jobs.build.outputs.build-success }}

jobs:
  # Build job
  build:
    name: Build Application
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    outputs:
      build-success: ${{ steps.build-status.outputs.success }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        id: build-app
        env:
          NEXT_PUBLIC_CONVEX_URL: ${{ secrets.NEXT_PUBLIC_CONVEX_URL }}
          NEXT_PUBLIC_GEMINI_API_KEY: ${{ secrets.NEXT_PUBLIC_GEMINI_API_KEY }}
          NEXT_PUBLIC_GOOGLE_AUTH_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_AUTH_KEY }}
        run: |
          set +e
          npm run build
          build_exit_code=$?
          set -e
          echo "Build exit code: $build_exit_code"
          if [ $build_exit_code -eq 0 ]; then
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
            exit $build_exit_code
          fi

      - name: Create build artifact
        if: steps.build-app.outputs.success == 'true'
        run: |
          tar -czf build-output.tar.gz .next
          echo "Build artifact created successfully"

      - name: Upload build artifact
        if: steps.build-app.outputs.success == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build-output.tar.gz
          retention-days: 7

      - name: Set build status
        id: build-status
        run: |
          if [ "${{ steps.build-app.outputs.success }}" == "true" ]; then
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
          fi

  # Performance testing job
  performance-test:
    name: Performance Testing
    needs: [build]
    if: needs.build.outputs.build-success == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Extract build artifact
        run: tar -xzf build-output.tar.gz

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.13.x

      - name: Create Lighthouse config
        run: |
          cat > lighthouserc.json << 'EOL'
          {
            "ci": {
              "collect": {
                "url": ["http://localhost:3000"],
                "numberOfRuns": 1
              },
              "assert": {
                "preset": "lighthouse:no-pwa",
                "assertions": {
                  "csp-xss": "off",
                  "document-title": "off",
                  "errors-in-console": "off",
                  "font-size": "off",
                  "html-has-lang": "off",
                  "meta-description": "off",
                  "tap-targets": "off",
                  "viewport": "off",
                  "unused-javascript": "off",
                  "total-byte-weight": "off",
                  "bootup-time": "off",
                  "dom-size": "off",
                  "mainthread-work-breakdown": "off",
                  "max-potential-fid": "off",
                  "modern-image-formats": "off",
                  "render-blocking-resources": "off",
                  "server-response-time": "off",
                  "largest-contentful-paint": "off"
                }
              },
              "upload": {
                "target": "temporary-public-storage"
              }
            }
          }
          EOL

      - name: Start Next.js server
        run: |
          npm ci
          npm run start &
          sleep 10

      - name: Run Lighthouse CI
        run: |
          lhci autorun
        continue-on-error: true

      - name: Save Lighthouse report
        run: |
          mkdir -p lighthouse-reports
          cp -r .lighthouseci/reports/* lighthouse-reports/ || true

      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: lighthouse-reports/
          retention-days: 7
